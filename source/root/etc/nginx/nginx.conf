#user  wwwrun;
#group www;
worker_processes  1;

#error_log  /var/log/nginx/error.log;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

#pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
    use epoll;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;
    gzip_http_version 1.1;
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 4 8k;
    gzip_types text/plain application/xhtml+xml text/css application/xml application/xml+rss text/javascript application/javascript application/x-javascript;
    gzip_proxied     any;
    gzip_disable     "MSIE [1-6]\.";

    client_max_body_size 50M;

    underscores_in_headers on;
    charset utf-8;
    autoindex on;

    include conf.d/*.conf;

    server {
        listen       80;
        server_name  lair lair.union;

        #access_log  /var/log/nginx/host.access.log  main;
        #charset koi8-r;
	root /srv/www/htdocs/;
	index index.php index.html index.htm default.html default.htm;

        location / {
        	# Support Clean (aka Search Engine Friendly) URLs
                try_files $uri $uri/ /index.php?$args;
                # Restricting access
                auth_basic "Restricted Access";
                auth_basic_user_file htpasswd;
        }

        # deny running scripts inside writable directories
        location ~* /(images|cache|media|logs|tmp)/.*\.(php|pl|py|jsp|asp|sh|cgi)$ {
                return 403;
                error_page 403 /403_error.html;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /srv/www/htdocs/;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        location ~ \.php$ {
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            if (!-f $document_root$fastcgi_script_name) {
                 return 404;
                 }
            fastcgi_pass   unix:/var/run/php5-fpm.sock;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

	location /gitweb/ {
		index gitweb.cgi;
		include fastcgi_params;
		gzip off;
		#fastcgi_param 	SCRIPT_NAME $uri;
		#fastcgi_param 	SCRIPT_FILENAME  /usr/share/gitweb/gitweb.cgi;
		fastcgi_param   GITWEB_CONFIG  /etc/gitweb.conf;
		#fastcgi_param 	GIT_HTTP_EXPORT_ALL "";
		#fastcgi_param 	GIT_PROJECT_ROOT  /srv/git;
		if ($uri ~ "/gitweb/gitweb.cgi") {
			fastcgi_pass    unix:/var/run/fcgiwrap.sock;
			}
		include fastcgi_params;
	}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   /srv/www/htdocs/;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    # include nginx_https.conf

    include vhosts.d/*.conf;
}
